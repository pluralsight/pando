on:
  push:
    branches:
      - main

env:
  CI: true
  PNPM_CACHE_FOLDER: .pnpm-store
  RELEASE_CHANNEL: 'experimental'

jobs:
  build-packages:
    runs-on: ubuntu-latest
    name: 👷‍♀️ Build experimental packages
    steps:
      - uses: actions/checkout@v4.1.0
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      - run: |
          pnpm install
          pnpm -w build:packages
          tar -czvf experimental_packages.tar.gz packages/*/npm
      - name: 🗃 Archive experimental packages
        uses: actions/upload-artifact@v3
        with:
          name: experimental_packages
          path: experimental_packages.tar.gz

  experimental-release:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    name: 🚀 Publish experimental release
    needs: build-packages
    steps:
      - name: checkout code repository
        uses: actions/checkout@v4.1.0
        with:
          fetch-depth: 0

      - name: Install pnPm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Setup npmrc
        run: pnpm config set '//registry.npmjs.org/:_authToken' "${NODE_AUTH_TOKEN}"
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: setup pnPm config
        run: pnpm config set store-dir $PNPM_CACHE_FOLDER

      - name: 🗃 Download experimental packages
        uses: actions/download-artifact@v3
        id: download
        with:
          name: experimental_packages
          path: ./experimental_packages

      - name: Install dependencies
        run: pnpm install

      - name: Copy experimental packages
        run: tar -xzvf ${{steps.download.outputs.download-path}}/experimental_packages.tar.gz -C experimental_packages

      - name: Prepare experimental release
        run: pnpm -w prepare:release --release experimental --commit=$GITHUB_SHA --ci

      - name: 🚀 Publish experimental release
        run: pnpm -w publish:packages --ci --tags experimental
