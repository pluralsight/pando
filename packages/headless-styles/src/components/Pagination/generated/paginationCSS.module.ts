// This file is generated by running the Vite dev sever via
// 'yarn start:sandbox' and **visiting localhost:3000**
//
// Manual changes will be lost - proceed with caution!

import buttonCSS from '../../Button/generated/buttonCSS.module'

export default {
  paginationContainer: {
    alignItems: 'center',
    columnGap: '1rem',
    display: 'grid',
    gridTemplateColumns: 'repeat(3, 1fr)',
    gridTemplateRows: '1fr',
    rowGap: '0',
    textAlign: 'right',
    width: '100%',
  },
  paginationBtn: {
    ...buttonCSS.btnBase,
    backgroundColor: 'var(--ps-background)',
    borderRadius: '6px',
    color: 'var(--ps-text)',
    height: '2rem',
    minWidth: 'initial',
    paddingInlineEnd: '1rem',
    paddingInlineStart: '1rem',
    '&:hover': {
      ...('&:hover' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:hover'] === 'object'
        ? buttonCSS.btnBase['&:hover']
        : undefined),
      backgroundColor: 'var(--ps-background-hover)',
    },
    '&:focus': {
      ...('&:focus' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:focus'] === 'object'
        ? buttonCSS.btnBase['&:focus']
        : undefined),
      outline: '3px solid var(--ps-action-border-focus)',
      outlineOffset: '2px',
    },
    '&:focus:not(:focus-visible)': {
      ...('&:focus:not(:focus-visible)' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:focus:not(:focus-visible)'] === 'object'
        ? buttonCSS.btnBase['&:focus:not(:focus-visible)']
        : undefined),
      boxShadow: 'none',
      outline: 'none',
    },
  },
  paginationNewer: {
    ...buttonCSS.btnBase,
    backgroundColor: 'var(--ps-background)',
    borderRadius: '6px',
    color: 'var(--ps-text)',
    height: '2rem',
    minWidth: 'initial',
    paddingInlineEnd: '1rem',
    paddingInlineStart: '1rem',
    '&:hover': {
      ...('&:hover' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:hover'] === 'object'
        ? buttonCSS.btnBase['&:hover']
        : undefined),
      backgroundColor: 'var(--ps-background-hover)',
    },
    '&:focus': {
      ...('&:focus' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:focus'] === 'object'
        ? buttonCSS.btnBase['&:focus']
        : undefined),
      outline: '3px solid var(--ps-action-border-focus)',
      outlineOffset: '2px',
    },
    '&:focus:not(:focus-visible)': {
      ...('&:focus:not(:focus-visible)' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:focus:not(:focus-visible)'] === 'object'
        ? buttonCSS.btnBase['&:focus:not(:focus-visible)']
        : undefined),
      boxShadow: 'none',
      outline: 'none',
    },
  },
  paginationOlder: {
    ...buttonCSS.btnBase,
    backgroundColor: 'var(--ps-background)',
    borderRadius: '6px',
    color: 'var(--ps-text)',
    height: '2rem',
    minWidth: 'initial',
    paddingInlineEnd: '1rem',
    paddingInlineStart: '1rem',
    '&:hover': {
      ...('&:hover' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:hover'] === 'object'
        ? buttonCSS.btnBase['&:hover']
        : undefined),
      backgroundColor: 'var(--ps-background-hover)',
    },
    '&:focus': {
      ...('&:focus' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:focus'] === 'object'
        ? buttonCSS.btnBase['&:focus']
        : undefined),
      outline: '3px solid var(--ps-action-border-focus)',
      outlineOffset: '2px',
    },
    '&:focus:not(:focus-visible)': {
      ...('&:focus:not(:focus-visible)' in buttonCSS.btnBase &&
      typeof buttonCSS.btnBase['&:focus:not(:focus-visible)'] === 'object'
        ? buttonCSS.btnBase['&:focus:not(:focus-visible)']
        : undefined),
      boxShadow: 'none',
      outline: 'none',
    },
    marginLeft: '0.5rem',
  },
  paginationText: {
    color: 'var(--ps-text-medium)',
  },
  paginationText___strong: {
    color: 'var(--ps-text-strong)',
  },
}
