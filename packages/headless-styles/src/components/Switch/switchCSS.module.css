.container {
  display: inline-block;
  line-height: 0;
  position: relative;
  vertical-align: middle;
}

.input {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.thumb {
  background: white;
  border-radius: inherit;
  height: var(--ps-thumb-size);
  transition-duration: 200ms;
  transition-property: transform;
  width: var(--ps-thumb-size);
}

.track {
  --ps-thumb-size: 1.25rem;
  --ps-track-height: 1.5rem;
  --ps-track-width: 3rem;

  background: var(--ps-neutral-border-weak);
  border-radius: 1000px;
  box-sizing: border-box;
  cursor: pointer;
  display: inline-flex;
  flex-shrink: 0;
  height: var(--ps-track-height);
  justify-content: flex-start;
  padding: 2px;
  transition-duration: 150ms;
  transition-property: background-color, border-color, transform;
  width: var(--ps-track-width);
}

/* element states */

.input:focus + .track {
  box-shadow: 0 0 0 3px var(--ps-background-active);
}

.input:focus:not(:focus-visible) + .track {
  box-shadow: none;
  outline: none;
}

/* sizes must be last */

.thumb[data-checked='true'] {
  transform: translateX(calc(var(--ps-track-width) - var(--ps-track-height)));
}

.thumb[data-disabled='true'] {
  background: var(--ps-neutral-text-weak);
}

.track[data-checked='true'] {
  background: var(--ps-background);
}

.track[data-invalid='true'] {
  background: var(--ps-danger-background);
}

.track[data-disabled='true'],
.track[data-invalid='true'] {
  cursor: not-allowed;
}

.sTrack {
  composes: track;

  --ps-thumb-size: 0.75rem;
  --ps-track-height: 1rem;
  --ps-track-width: 2rem;
}

.mTrack {
  composes: track;
}
