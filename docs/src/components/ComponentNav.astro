---

import { hstack } from '@/styled-system/patterns'
import { css } from '@/styled-system/css'
import TextLink from './ReactLib/TextLink/TextLink.astro'
import { Show } from '@pluralsight/react'
import {InfoCircleIcon, PencilIcon, CodeIcon, NoteIcon} from '@pluralsight/react/icons'

type ComponentNavLinks = 'overview' | 'usage' | 'implementation' | 'guidelines'

type ComponentNavLinkHref = {
  [key in ComponentNavLinks]?: string

}
interface Props {
  links: ComponentNavLinkHref
  active: ComponentNavLinks
}

const { links, active } = Astro.props

const activeStyles = { bgColor: 'action.bg.initial' }

const notActiveStyles = { _hover: { bgColor: 'action.bg.100.hover'} }

const linkStyles = { textWrap: 'wrap', padding: '3', borderRadius: 'md' }

const iconStyles = css({ paddingRight: '2' })

---

<nav class={hstack({gap: '4', bgColor: 'neutral.surface.300', borderRadius: 'md', width: 'fit-content', padding: '1'})}>
  <Show when={!!links.overview} client:only >
    <TextLink className={css(active === 'overview' ? activeStyles : notActiveStyles, linkStyles)} href={links.overview}>
      <InfoCircleIcon className={iconStyles} /> Overview
    </TextLink>
  </Show>
  <Show when={!!links.usage} client:only >
    <TextLink className={css(active === 'usage' ? activeStyles : notActiveStyles, linkStyles)} href={links.usage}>
      <PencilIcon className={iconStyles} /> Usage
    </TextLink>
  </Show>
  <Show when={!!links.guidelines} client:only >
    <TextLink className={css(active === 'guidelines' ? activeStyles : notActiveStyles, linkStyles)} href={links.guidelines}>
      <NoteIcon className={iconStyles} /> Guidelines
    </TextLink>
  </Show>
  <Show when={!!links.implementation} client:only >
    <TextLink className={css(active === 'implementation' ? activeStyles : notActiveStyles, linkStyles)} href={links.implementation}>
      <CodeIcon className={iconStyles} /> Implementation
    </TextLink>
  </Show>
</nav>
<hr />

