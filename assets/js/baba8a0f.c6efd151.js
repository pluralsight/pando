"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5255],{81509:(e,t,n)=>{n.d(t,{dS:()=>o,fK:()=>l,C9:()=>d,ZP:()=>c});var a=n(70079),r=n(88660);const i={linkList:"linkList_sLwJ",linkItem:"linkItem_ESvF"};function s(e){return a.createElement("li",{className:i.linkItem},a.createElement(r.Z,e,e.children))}function l(e){return a.createElement(s,{href:e.href},e.children??"View on Github")}function o(e){return a.createElement(s,{href:e.href},"View on Figma")}function d(e){return a.createElement("ul",{className:i.linkList},e.children)}function c(e){const{figma:t,github:n}=e;return a.createElement("ul",{className:i.linkList},n&&a.createElement(l,{href:n}),t&&a.createElement(o,{href:t}))}},66794:(e,t,n)=>{n(70079)},88660:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(70079),r=n(60047),i=n(26078),s=n(20394),l=n(32042);function o(e){const{href:t}=e,n=(0,i.L)({ariaHidden:!0,size:"s"}),o=t.includes("github")?s.Z:l.Z;return a.createElement(r.TextLink,e,a.createElement(o,n),e.children)}},17292:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=n(3262),r=(n(70079),n(38570)),i=n(81509);n(66794);const s={tags:["app frame","aside","equal col","row","layout"],title:"Grid"},l=void 0,o={unversionedId:"reference/components/grid",id:"reference/components/grid",title:"Grid",description:"Used to display content in a grid layout.",source:"@site/docs/reference/components/grid.mdx",sourceDirName:"reference/components",slug:"/reference/components/grid",permalink:"/docs/reference/components/grid",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/grid.mdx",tags:[{label:"app frame",permalink:"/docs/tags/app-frame"},{label:"aside",permalink:"/docs/tags/aside"},{label:"equal col",permalink:"/docs/tags/equal-col"},{label:"row",permalink:"/docs/tags/row"},{label:"layout",permalink:"/docs/tags/layout"}],version:"current",lastUpdatedBy:"Kathy Lavoie",frontMatter:{tags:["app frame","aside","equal col","row","layout"],title:"Grid"},sidebar:"reference",previous:{title:"Form Label",permalink:"/docs/reference/components/form-label"},next:{title:"Icon Button",permalink:"/docs/reference/components/icon-button"}},d={},c=[{value:"Anatomy",id:"anatomy",level:2},{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Columns",id:"columns",level:3},{value:"Spanning columns",id:"spanning-columns",level:3},{value:"Template areas",id:"template-areas",level:3},{value:"Customizing",id:"customizing",level:3},{value:"1. Unused Classes",id:"1-unused-classes",level:4},{value:"2. Passing a <code>className</code> prop",id:"2-passing-a-classname-prop",level:4},{value:"3. Ejected Grid",id:"3-ejected-grid",level:4},{value:"Behavior",id:"behavior",level:2},{value:"API",id:"api",level:2},{value:"<code>Grid</code>",id:"grid",level:3},{value:"Parameters",id:"parameters",level:4},{value:"<code>GridItem</code>",id:"griditem",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Accessibility",id:"accessibility",level:2}],m={toc:c},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",{className:"size-xxl"},"Used to display content in a grid layout."),(0,r.kt)(i.C9,{mdxType:"DocsLinkList"},(0,r.kt)(i.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/react/src/components/Grid.tsx",mdxType:"DocsGithubLink"}),(0,r.kt)(i.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Grid/gridCSS.ts",mdxType:"DocsGithubLink"},"View Core API"),(0,r.kt)(i.dS,{href:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsFigmaLink"})),(0,r.kt)("h2",{id:"anatomy"},"Anatomy"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Grid"),(0,r.kt)("li",{parentName:"ol"},"Grid Item")),(0,r.kt)("h2",{id:"import"},"Import"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Grid, GridItem } from '@pluralsight/react'\n")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"columns"},"Columns"),(0,r.kt)("p",null,"Here is an example of how columns work with the Grid. Here we are creating a 12 column grid with a gap of 6px between each column."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function GridColumnExample() {\n  const cols = new Array(12).fill(null)\n  return (\n    <Grid cols="12" gap="6" rows="3rem">\n      {cols.map((_, idx) => (\n        <GridItem\n          col={idx + 1}\n          key={idx}\n          style={{\n            backgroundColor: \'var(--ps-surface-strong)\',\n          }}\n        />\n      ))}\n    </Grid>\n  )\n}\n')),(0,r.kt)("h3",{id:"spanning-columns"},"Spanning columns"),(0,r.kt)("p",null,"Here is an example of how to span columns with the GridItem. Here we are creating a 12 column grid with a gap of 6px between each column. We are also spanning the first GridItem to take up 4 columns."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function GridSpanExample() {\n  return (\n    <Grid cols="12" gap="6" rows="3rem">\n      <GridItem\n        col="1 / span 4"\n        style={{\n          backgroundColor: \'var(--ps-surface-strong)\',\n        }}\n      />\n      <GridItem\n        style={{\n          backgroundColor: \'var(--ps-surface-strong)\',\n        }}\n      />\n      <GridItem\n        style={{\n          backgroundColor: \'var(--ps-surface-strong)\',\n        }}\n      />\n    </Grid>\n  )\n}\n')),(0,r.kt)("h3",{id:"template-areas"},"Template areas"),(0,r.kt)("p",null,"Here is an example of how to use template areas with the Grid. Here we are creating a 12 column grid with a gap of 6px between each column. We are also using the ",(0,r.kt)("inlineCode",{parentName:"p"},"areas")," property to define the layout of the GridItems. This is a great way to create responsive layouts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function GridAreasExample() {\n  const cellStyles = {\n    backgroundColor: \'var(--ps-surface-strong)\',\n  }\n\n  return (\n    <Grid\n      areas={[\'header header\', \'nav main\', \'footer footer\']}\n      cols="12"\n      gap="6"\n      rows="2rem 10rem 5rem"\n    >\n      <GridItem area="header" col="1 / span 12" style={cellStyles}>\n        Header\n      </GridItem>\n      <GridItem area="nav" col="1 / span 3" style={cellStyles}>\n        Nav\n      </GridItem>\n      <GridItem area="main" col="4 / span 9" style={cellStyles}>\n        Main\n      </GridItem>\n      <GridItem area="footer" col="1 / span 12" style={cellStyles}>\n        Footer\n      </GridItem>\n    </Grid>\n  )\n}\n')),(0,r.kt)("h3",{id:"customizing"},"Customizing"),(0,r.kt)("p",null,"There are 3 ways to customize the Grid components."),(0,r.kt)("admonition",{title:"pitfall",type:"danger"},(0,r.kt)("p",{parentName:"admonition"},"The Grid components create styles using ",(0,r.kt)("strong",{parentName:"p"},"inline-styling"),". This means that if you use CSS to customize, you will need to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"!important")," keyword to override the inline styles.")),(0,r.kt)("h4",{id:"1-unused-classes"},"1. Unused Classes"),(0,r.kt)("p",null,"Each component layer of the Grid has a unused class name that can be utilized in your local CSS to customize the Grid at any level."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"pando-grid"),": The element of the Grid."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"pando-grid-item"),": The element of the GridItem.")),(0,r.kt)("h4",{id:"2-passing-a-classname-prop"},"2. Passing a ",(0,r.kt)("inlineCode",{parentName:"h4"},"className")," prop"),(0,r.kt)("p",null,"You can pass a ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," prop to the Grid component to customize the Grid. This is useful if your project uses ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/css-modules/css-modules"},"CSS Modules")," or a CSS-in-JS library like ",(0,r.kt)("a",{parentName:"p",href:"https://emotion.sh/docs/introduction"},"Emotion"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example of using CSS Modules to customize the Grid." showLineNumbers',title:'"Example',of:!0,using:!0,CSS:!0,Modules:!0,to:!0,customize:!0,the:!0,'Grid."':!0,showLineNumbers:!0},"import customStyles from './customStyles.module.css'\n\nfunction CustomGrid(props) {\n  return <Grid className={customStyles.custom}>{props.children}</Grid>\n}\n")),(0,r.kt)("h4",{id:"3-ejected-grid"},"3. Ejected Grid"),(0,r.kt)("p",null,'For a low-level "ejected" approach, you can use the Headless-styles API to customize the Grid however you prefer while keeping the accessibility behavior.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},"import { getGridProps, getGridItemProps } from '@pluralsight/headless-styles'\n")),(0,r.kt)("p",null,"To learn more about the Headless-styles API, check out the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/pluralsight/pando/blob/main/packages/headless-styles/src/components/Grid/gridCSS.ts"},"Headless-styles documentation"),"."),(0,r.kt)("h2",{id:"behavior"},"Behavior"),(0,r.kt)("p",null,"There are no behavior patterns required for the Grid."),(0,r.kt)("h2",{id:"api"},"API"),(0,r.kt)("h3",{id:"grid"},(0,r.kt)("inlineCode",{parentName:"h3"},"Grid")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface GridProps extends HTMLAttributes<HTMLDivElement> {\n  areas: string[]\n  cols?: number\n  gap?: string\n  rows?: number\n}\n")),(0,r.kt)("h3",{id:"griditem"},(0,r.kt)("inlineCode",{parentName:"h3"},"GridItem")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"interface GridItemProps extends HTMLAttributes<HTMLDivElement> {\n  area?: string\n  col?: number\n  row?: number\n}\n")),(0,r.kt)("h2",{id:"accessibility"},"Accessibility"),(0,r.kt)("p",null,"The Pando Grid & GridItem APIs combined with semantic HTML allow the Grid & GridItems to be fully accessible and screen-readable."))}u.isMDXComponent=!0}}]);