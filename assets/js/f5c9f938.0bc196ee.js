"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[706],{81509:(e,a,t)=>{t.d(a,{dS:()=>o,fK:()=>s,C9:()=>m,ZP:()=>d});var l=t(70079),n=t(88660);const i={linkList:"linkList_sLwJ",linkItem:"linkItem_ESvF"};function r(e){return l.createElement("li",{className:i.linkItem},l.createElement(n.Z,e,e.children))}function s(e){return l.createElement(r,{href:e.href},e.children??"View on Github")}function o(e){return l.createElement(r,{href:e.href},"View on Figma")}function m(e){return l.createElement("ul",{className:i.linkList},e.children)}function d(e){const{figma:a,github:t}=e;return l.createElement("ul",{className:i.linkList},t&&l.createElement(s,{href:t}),a&&l.createElement(o,{href:a}))}},66794:(e,a,t)=>{t(70079)},88660:(e,a,t)=>{t.d(a,{Z:()=>o});var l=t(70079),n=t(60047),i=t(26078),r=t(20394),s=t(32042);function o(e){const{href:a}=e,t=(0,i.L)({ariaHidden:!0,size:"s"}),o=a.includes("github")?r.Z:s.Z;return l.createElement(n.TextLink,e,l.createElement(o,t),e.children)}},21368:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var l=t(3262),n=(t(70079),t(38570)),i=t(81509);t(66794);const r={tags:["field","label","forms"],title:"Form Label"},s=void 0,o={unversionedId:"reference/components/form-label",id:"reference/components/form-label",title:"Form Label",description:"Used to display a text label for a form field.",source:"@site/docs/reference/components/form-label.mdx",sourceDirName:"reference/components",slug:"/reference/components/form-label",permalink:"/docs/reference/components/form-label",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/form-label.mdx",tags:[{label:"field",permalink:"/docs/tags/field"},{label:"label",permalink:"/docs/tags/label"},{label:"forms",permalink:"/docs/tags/forms"}],version:"current",lastUpdatedBy:"Kathy Lavoie",frontMatter:{tags:["field","label","forms"],title:"Form Label"},sidebar:"reference",previous:{title:"Form Control",permalink:"/docs/reference/components/form-control"},next:{title:"Grid",permalink:"/docs/reference/components/grid"}},m={},d=[{value:"Import",id:"import",level:2},{value:"Anatomy",id:"anatomy",level:2},{value:"Usage",id:"usage",level:2},{value:"Optional Label",id:"optional-label",level:3},{value:"Required Label",id:"required-label",level:3},{value:"Hidden Label",id:"hidden-label",level:3},{value:"Customizing",id:"customizing",level:3},{value:"1. Unused Classes",id:"1-unused-classes",level:4},{value:"2. Passing a <code>className</code> prop",id:"2-passing-a-classname-prop",level:4},{value:"3. Ejected Label",id:"3-ejected-label",level:4},{value:"Behavior",id:"behavior",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Usage",id:"usage-1",level:3},{value:"API",id:"api",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Accessibility",id:"accessibility",level:2}],p={toc:d},c="wrapper";function u(e){let{components:a,...t}=e;return(0,n.kt)(c,(0,l.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("p",{className:"size-xxl"},"Used to display a text label for a form field."),(0,n.kt)(i.C9,{mdxType:"DocsLinkList"},(0,n.kt)(i.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/react/src/components/Label.tsx",mdxType:"DocsGithubLink"}),(0,n.kt)(i.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/FormLabel/formLabelCSS.ts",mdxType:"DocsGithubLink"},"View Core API"),(0,n.kt)(i.dS,{href:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsFigmaLink"})),(0,n.kt)("h2",{id:"import"},"Import"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Label } from '@pluralsight/react'\n")),(0,n.kt)("h2",{id:"anatomy"},"Anatomy"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Form Control"),(0,n.kt)("li",{parentName:"ol"},"Label"),(0,n.kt)("li",{parentName:"ol"},"Input"),(0,n.kt)("li",{parentName:"ol"},"Message")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("admonition",{title:"Labels should always be used",type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"To keep your forms accessible, always use a Label for your form fields. This ensures that screen readers can properly read the form field and that users can click on the Label to focus the form field when they are not ",(0,n.kt)("a",{parentName:"p",href:"#hidden-label"},"visually hidden"),".")),(0,n.kt)("h3",{id:"optional-label"},"Optional Label"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function BasicFormLabel() {\n  const [email, setEmail] = useState(\'\')\n\n  function handleChange(e) {\n    setEmail(e.target.value)\n  }\n\n  return (\n    <FormControlProvider>\n      <Label htmlFor="email">Email</Label>\n      <Input\n        describedBy="email:help"\n        id="email"\n        name="email"\n        onChange={handleChange}\n        placeholder="email@example.com"\n        type="email"\n        value={email}\n      />\n      <FieldMessage id="email:help">\n        We will never share your email.\n      </FieldMessage>\n    </FormControlProvider>\n  )\n}\n')),(0,n.kt)("h3",{id:"required-label"},"Required Label"),(0,n.kt)("p",null,"To make a field required, pass the ",(0,n.kt)("inlineCode",{parentName:"p"},"required")," prop to the ",(0,n.kt)("inlineCode",{parentName:"p"},"FormControlProvider")," component."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function RequiredFormLabel() {\n  const [email, setEmail] = useState(\'\')\n\n  function handleChange(e) {\n    setEmail(e.target.value)\n  }\n\n  return (\n    <FormControlProvider required={true}>\n      <Label htmlFor="email">Email</Label>\n      <Input\n        describedBy="email:help"\n        id="email"\n        name="email"\n        onChange={handleChange}\n        placeholder="email@example.com"\n        type="email"\n        value={email}\n      />\n      <FieldMessage id="email:help">\n        We will never share your email.\n      </FieldMessage>\n    </FormControlProvider>\n  )\n}\n')),(0,n.kt)("h3",{id:"hidden-label"},"Hidden Label"),(0,n.kt)("p",null,"To make a label visually hidden, pass a ",(0,n.kt)("inlineCode",{parentName:"p"},"hidden")," value to the ",(0,n.kt)("inlineCode",{parentName:"p"},"kind")," prop on the Label component."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function BasicFormLabel() {\n  const [search, setSearch] = useState(\'\')\n\n  function handleChange(e) {\n    setSearch(e.target.value)\n  }\n\n  return (\n    <FormControlProvider>\n      <Label htmlFor="search" kind="hidden">\n        Search\n      </Label>\n      <Input\n        id="search"\n        name="search"\n        onChange={handleChange}\n        placeholder="Search for anything..."\n        type="text"\n        value={search}\n      />\n    </FormControlProvider>\n  )\n}\n')),(0,n.kt)("h3",{id:"customizing"},"Customizing"),(0,n.kt)("p",null,"There are 3 ways to customize the Label component."),(0,n.kt)("h4",{id:"1-unused-classes"},"1. Unused Classes"),(0,n.kt)("p",null,"Each component layer of the Label has a unused class name that can be utilized in your local CSS to customize the Label at any level."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"pando-label"),": The element of the Label.")),(0,n.kt)("h4",{id:"2-passing-a-classname-prop"},"2. Passing a ",(0,n.kt)("inlineCode",{parentName:"h4"},"className")," prop"),(0,n.kt)("p",null,"You can pass a ",(0,n.kt)("inlineCode",{parentName:"p"},"className")," prop to the Label component to customize the Label. This is useful if your project uses ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/css-modules/css-modules"},"CSS Modules")," or a CSS-in-JS library like ",(0,n.kt)("a",{parentName:"p",href:"https://emotion.sh/docs/introduction"},"Emotion"),"."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example of using CSS Modules to customize the Label." showLineNumbers',title:'"Example',of:!0,using:!0,CSS:!0,Modules:!0,to:!0,customize:!0,the:!0,'Label."':!0,showLineNumbers:!0},"import customStyles from './customStyles.module.css'\n\nfunction CustomLabel(props) {\n  return <Label className={customStyles.custom} {...props} />\n}\n")),(0,n.kt)("h4",{id:"3-ejected-label"},"3. Ejected Label"),(0,n.kt)("p",null,'For a low-level "ejected" approach, you can use the Headless-styles API to customize the Label however you prefer while keeping the accessibility behavior.'),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},"import { getLabelProps } from '@pluralsight/headless-styles'\n")),(0,n.kt)("p",null,"To learn more about the Headless-styles API, check out the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/pluralsight/pando/blob/main/packages/headless-styles/src/components/Label/labelCSS.ts"},"Headless-styles documentation"),"."),(0,n.kt)("h2",{id:"behavior"},"Behavior"),(0,n.kt)("h3",{id:"patterns"},"Patterns"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Do")," stack form fields vertically when displaying a set."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Don't")," use more than one form field within the same row."),(0,n.kt)("h3",{id:"usage-1"},"Usage"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Do"),' use the "(required)" text flag on all required form field labels.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Don't"),' use a "',"*",'" to represent a required field; this pattern is not accessible.'),(0,n.kt)("h2",{id:"api"},"API"),(0,n.kt)("h3",{id:"parameters"},"Parameters"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"interface FormLabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n  htmlFor: string\n  kind?: 'default' | 'hidden'\n}\n")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"htmlFor"),": string - The id of the form field that the label is associated with."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("inlineCode",{parentName:"li"},"kind"),": string - The kind of label to render. Defaults to ",(0,n.kt)("inlineCode",{parentName:"li"},"default"),".")),(0,n.kt)("h2",{id:"accessibility"},"Accessibility"),(0,n.kt)("p",null,"The Pando Label is fully accessible and screen-readable through the following features:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"htmlFor")," prop is required to associate the label with the form field."),(0,n.kt)("li",{parentName:"ol"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"kind")," prop is required to render the label as a hidden label."),(0,n.kt)("li",{parentName:"ol"},'Required fields are indicated with a "(required)" text flag which is a more accessible and obvious pattern than using a "',"*",'".')))}u.isMDXComponent=!0}}]);