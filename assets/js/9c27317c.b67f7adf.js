"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4939],{81509:(e,t,a)=>{a.d(t,{dS:()=>r,fK:()=>o,C9:()=>d,ZP:()=>c});var n=a(70079),i=a(88660);const s={linkList:"linkList_sLwJ",linkItem:"linkItem_ESvF"};function l(e){return n.createElement("li",{className:s.linkItem},n.createElement(i.Z,e,e.children))}function o(e){return n.createElement(l,{href:e.href},e.children??"View on Github")}function r(e){return n.createElement(l,{href:e.href},"View on Figma")}function d(e){return n.createElement("ul",{className:s.linkList},e.children)}function c(e){const{figma:t,github:a}=e;return n.createElement("ul",{className:s.linkList},a&&n.createElement(o,{href:a}),t&&n.createElement(r,{href:t}))}},66794:(e,t,a)=>{a(70079)},88660:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(70079),i=a(60047),s=a(26078),l=a(20394),o=a(32042);function r(e){const{href:t}=e,a=(0,s.L)({ariaHidden:!0,size:"s"}),r=t.includes("github")?l.Z:o.Z;return n.createElement(i.TextLink,e,n.createElement(r,a),e.children)}},71296:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>r,toc:()=>c});var n=a(3262),i=(a(70079),a(38570)),s=a(81509);a(66794);const l={tags:["Meta data","Static Tag"],title:"Badge"},o=void 0,r={unversionedId:"reference/components/badge",id:"reference/components/badge",title:"Badge",description:"Used to highlight a category in a non-interactive way for quick recognition.",source:"@site/docs/reference/components/badge.mdx",sourceDirName:"reference/components",slug:"/reference/components/badge",permalink:"/docs/reference/components/badge",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/badge.mdx",tags:[{label:"Meta data",permalink:"/docs/tags/meta-data"},{label:"Static Tag",permalink:"/docs/tags/static-tag"}],version:"current",lastUpdatedBy:"Kathy Lavoie",frontMatter:{tags:["Meta data","Static Tag"],title:"Badge"},sidebar:"reference",previous:{title:"Avatar",permalink:"/docs/reference/components/avatar"},next:{title:"Button",permalink:"/docs/reference/components/button"}},d={},c=[{value:"Anatomy",id:"anatomy",level:2},{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Filled Badges",id:"filled-badges",level:3},{value:"Outline Badges",id:"outline-badges",level:3},{value:"Badge with icon",id:"badge-with-icon",level:3},{value:"Sizes",id:"sizes",level:3},{value:"Customizing",id:"customizing",level:3},{value:"1. Unused Classes",id:"1-unused-classes",level:4},{value:"2. Passing a <code>className</code> prop",id:"2-passing-a-classname-prop",level:4},{value:"3. Ejected Badge",id:"3-ejected-badge",level:4},{value:"Behavior",id:"behavior",level:2},{value:"Types",id:"types",level:3},{value:"States",id:"states",level:3},{value:"Static/Action Scenarios",id:"staticaction-scenarios",level:3},{value:"API",id:"api",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Size Mapping",id:"size-mapping",level:3},{value:"Accessibility",id:"accessibility",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...a}=e;return(0,i.kt)(u,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",{className:"size-xxl"},"Used to highlight a category in a non-interactive way for quick recognition."),(0,i.kt)(s.C9,{mdxType:"DocsLinkList"},(0,i.kt)(s.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/react/src/components/Badge.tsx",mdxType:"DocsGithubLink"}),(0,i.kt)(s.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Badge/badgeCSS.ts",mdxType:"DocsGithubLink"},"View Core API"),(0,i.kt)(s.dS,{href:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsFigmaLink"})),(0,i.kt)("h2",{id:"anatomy"},"Anatomy"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Container"),(0,i.kt)("li",{parentName:"ol"},"Icon (optional)"),(0,i.kt)("li",{parentName:"ol"},"Label")),(0,i.kt)("h2",{id:"import"},"Import"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Badge } from '@pluralsight/react'\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("h3",{id:"filled-badges"},"Filled Badges"),(0,i.kt)("p",null,"When a Badge is used in a context where it is the primary focus, it should be used as a filled Badge."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function FilledBadgeExample() {\n  return (\n    <Grid cols="repeat(5, 1fr)" gap={8} data-site-override="marginBottom">\n      <GridItem>\n        <Badge>default filled</Badge>\n      </GridItem>\n\n      <GridItem>\n        <Badge sentiment="info">info filled</Badge>\n      </GridItem>\n\n      <GridItem>\n        <Badge sentiment="success">success filled</Badge>\n      </GridItem>\n\n      <GridItem>\n        <Badge sentiment="warning">warning filled</Badge>\n      </GridItem>\n\n      <GridItem>\n        <Badge sentiment="danger">danger filled</Badge>\n      </GridItem>\n    </Grid>\n  )\n}\n')),(0,i.kt)("h3",{id:"outline-badges"},"Outline Badges"),(0,i.kt)("p",null,"When a Badge is used in a context where it is not the primary focus, it should be used as an outline Badge. To use an outline Badge, pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"usage")," prop with the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"outline"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function OutlineBadgeExample() {\n  return (\n    <Grid cols="repeat(5, 1fr)" gap={8} data-site-override="marginBottom">\n      <GridItem>\n        <Badge usage="outline">default outline</Badge>\n      </GridItem>\n\n      <GridItem>\n        <Badge sentiment="info" usage="outline">\n          info outline\n        </Badge>\n      </GridItem>\n\n      <GridItem>\n        <Badge sentiment="success" usage="outline">\n          success outline\n        </Badge>\n      </GridItem>\n\n      <GridItem>\n        <Badge sentiment="warning" usage="outline">\n          warning outline\n        </Badge>\n      </GridItem>\n\n      <GridItem>\n        <Badge sentiment="danger" usage="outline">\n          danger outline\n        </Badge>\n      </GridItem>\n    </Grid>\n  )\n}\n')),(0,i.kt)("h3",{id:"badge-with-icon"},"Badge with icon"),(0,i.kt)("p",null,"To add an Icon to a Badge, pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"icon")," prop with the value of the Icon component you want to use."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"// import { PlaceholderIcon } from '@pluralsight/icons'\n\nfunction BadgeWithIcon() {\n  return <Badge icon={PlaceholderIcon}>badge with icon</Badge>\n}\n")),(0,i.kt)("h3",{id:"sizes"},"Sizes"),(0,i.kt)("p",null,"To change the size of a Badge, pass the ",(0,i.kt)("inlineCode",{parentName:"p"},"size")," prop with the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"xs")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"s"),". The default size is ",(0,i.kt)("inlineCode",{parentName:"p"},"s"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"xs")," size should only be used as a last resort and should not use an Icon."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function BadgeSize() {\n  return (\n    <Grid cols="repeat(12, 1fr)" gap={8} data-site-override="marginBottom">\n      <GridItem>\n        <Badge size="xs">xs badge</Badge>\n      </GridItem>\n      <GridItem>\n        <Badge size="s">s (default)</Badge>\n      </GridItem>\n    </Grid>\n  )\n}\n')),(0,i.kt)("h3",{id:"customizing"},"Customizing"),(0,i.kt)("p",null,"There are 3 ways to customize the Badge component."),(0,i.kt)("h4",{id:"1-unused-classes"},"1. Unused Classes"),(0,i.kt)("p",null,"Each component layer of the Badge has a unused class name that can be utilized in your local CSS to customize the Badge at any level."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"pando-badge"),": The element of the Badge.")),(0,i.kt)("h4",{id:"2-passing-a-classname-prop"},"2. Passing a ",(0,i.kt)("inlineCode",{parentName:"h4"},"className")," prop"),(0,i.kt)("p",null,"You can pass a ",(0,i.kt)("inlineCode",{parentName:"p"},"className")," prop to the Badge component to customize the Badge. This is useful if your project uses ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/css-modules/css-modules"},"CSS Modules")," or a CSS-in-JS library like ",(0,i.kt)("a",{parentName:"p",href:"https://emotion.sh/docs/introduction"},"Emotion"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example of using CSS Modules to customize the Badge." showLineNumbers',title:'"Example',of:!0,using:!0,CSS:!0,Modules:!0,to:!0,customize:!0,the:!0,'Badge."':!0,showLineNumbers:!0},"import customStyles from './customStyles.module.css'\n\nfunction CustomBadge(props) {\n  return <Badge className={customStyles.customBadge}>{props.children}</Badge>\n}\n")),(0,i.kt)("h4",{id:"3-ejected-badge"},"3. Ejected Badge"),(0,i.kt)("p",null,'For a low-level "ejected" approach, you can use the Headless-styles API to customize the Badge however you prefer while keeping the accessibility behavior.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},"import {\n  getBadgeProps,\n  getBadgeIconOptions,\n} from '@pluralsight/headless-styles'\n")),(0,i.kt)("p",null,"To learn more about the Headless-styles API, check out the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/pluralsight/pando/blob/main/packages/headless-styles/src/components/Badge/badgeCSS.ts"},"Headless-styles documentation"),"."),(0,i.kt)("h2",{id:"behavior"},"Behavior"),(0,i.kt)("h3",{id:"types"},"Types"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," use the filled Badge as the default use case for all badges."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," change the color of the Badge."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do"),' use the outline Badge as the "low priority" use case for a badge.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," use the outline Badge as the default use case."),(0,i.kt)("h3",{id:"states"},"States"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," use the default size for all use cases where possible of the Badge."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't"),' use the "xs" size ',(0,i.kt)("em",{parentName:"p"},"unless")," it is a ",(0,i.kt)("strong",{parentName:"p"},"last resort"),"."),(0,i.kt)("h3",{id:"staticaction-scenarios"},"Static/Action Scenarios"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," use the Badge as a non-interactive element."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," link to new pages, or use any other interactive actions for a Badge."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do")," use the sentiment colors or a custom color option."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't")," use any color in the action sentiment theme category."),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("h3",{id:"parameters"},"Parameters"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"interface BadgeOptions extends HTMLAttributes<HTMLSpanElement> {\n  sentiment?: 'default' | 'info' | 'success' | 'warning' | 'danger'\n  usage?: 'filled' | 'outline'\n  size?: 'xs' | 's'\n}\n")),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Any prop that can be passed to an HTML ",(0,i.kt)("inlineCode",{parentName:"li"},"span")," element."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"sentiment")," - The color of the Badge. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"default"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"usage")," - The style of the Badge. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"filled"),"."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"size")," - The size of the Badge. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"s"),".")),(0,i.kt)("h3",{id:"size-mapping"},"Size Mapping"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="Badge size rules."',title:'"Badge',size:!0,'rules."':!0},"{\n  xs: 'For smaller/tighter experiences where the default size (s) cannot be supported.',\n  s: 'Should be used in most, if not all cases.'\n}\n")),(0,i.kt)("h2",{id:"accessibility"},"Accessibility"),(0,i.kt)("p",null,"The Pando Badge, and Icon APIs combined with semantic HTML allow the Badge to be fully accessible and screen-readable by default."))}m.isMDXComponent=!0}}]);