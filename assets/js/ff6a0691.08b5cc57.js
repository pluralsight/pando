"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2161],{81509:(e,t,s)=>{s.d(t,{dS:()=>r,fK:()=>o,C9:()=>d,ZP:()=>p});var l=s(70079),a=s(88660);const n={linkList:"linkList_sLwJ",linkItem:"linkItem_ESvF"};function i(e){return l.createElement("li",{className:n.linkItem},l.createElement(a.Z,e,e.children))}function o(e){return l.createElement(i,{href:e.href},e.children??"View on Github")}function r(e){return l.createElement(i,{href:e.href},"View on Figma")}function d(e){return l.createElement("ul",{className:n.linkList},e.children)}function p(e){const{figma:t,github:s}=e;return l.createElement("ul",{className:n.linkList},s&&l.createElement(o,{href:s}),t&&l.createElement(r,{href:t}))}},66794:(e,t,s)=>{s(70079)},88660:(e,t,s)=>{s.d(t,{Z:()=>r});var l=s(70079),a=s(60047),n=s(26078),i=s(20394),o=s(32042);function r(e){const{href:t}=e,s=(0,n.L)({ariaHidden:!0,size:"s"}),r=t.includes("github")?i.Z:o.Z;return l.createElement(a.TextLink,e,l.createElement(r,s),e.children)}},56599:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var l=s(3262),a=(s(70079),s(38570)),n=s(81509);s(66794);const i={tags:["forms","radio groups","checkbox groups","input groups"],title:"Fieldset"},o=void 0,r={unversionedId:"reference/components/fieldset",id:"reference/components/fieldset",title:"Fieldset",description:"Used to group several controls as well as labels within a form.",source:"@site/docs/reference/components/fieldset.mdx",sourceDirName:"reference/components",slug:"/reference/components/fieldset",permalink:"/docs/reference/components/fieldset",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/components/fieldset.mdx",tags:[{label:"forms",permalink:"/docs/tags/forms"},{label:"radio groups",permalink:"/docs/tags/radio-groups"},{label:"checkbox groups",permalink:"/docs/tags/checkbox-groups"},{label:"input groups",permalink:"/docs/tags/input-groups"}],version:"current",lastUpdatedBy:"Kathy Lavoie",frontMatter:{tags:["forms","radio groups","checkbox groups","input groups"],title:"Fieldset"},sidebar:"reference",previous:{title:"Field Messages",permalink:"/docs/reference/components/field-message"},next:{title:"Flex",permalink:"/docs/reference/components/flex"}},d={},p=[{value:"Anatomy",id:"anatomy",level:2},{value:"Import",id:"import",level:2},{value:"Usage",id:"usage",level:2},{value:"Disabled Groups",id:"disabled-groups",level:3},{value:"Customizing",id:"customizing",level:3},{value:"1. Unused Classes",id:"1-unused-classes",level:4},{value:"2. Passing a <code>className</code> prop",id:"2-passing-a-classname-prop",level:4},{value:"3. Ejected Fieldset",id:"3-ejected-fieldset",level:4},{value:"Behavior",id:"behavior",level:2},{value:"Usage",id:"usage-1",level:3},{value:"API",id:"api",level:2},{value:"<code>Fieldset: FC&lt;FieldsetProps&gt;</code>",id:"fieldset-fcfieldsetprops",level:3},{value:"Parameters",id:"parameters",level:4},{value:"<code>Legend: FC&lt;LegendProps&gt;</code>",id:"legend-fclegendprops",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Accessibility",id:"accessibility",level:2}],u={toc:p},c="wrapper";function m(e){let{components:t,...s}=e;return(0,a.kt)(c,(0,l.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",{className:"size-xxl"},"Used to group several controls as well as labels within a form."),(0,a.kt)(n.C9,{mdxType:"DocsLinkList"},(0,a.kt)(n.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/react/src/components/Fieldset.tsx",mdxType:"DocsGithubLink"}),(0,a.kt)(n.fK,{href:"https://github.com/pluralsight/pando/tree/main/packages/headless-styles/src/components/Fieldset/fieldset.ts",mdxType:"DocsGithubLink"},"View Core API"),(0,a.kt)(n.dS,{href:"https://www.figma.com/file/ZmH4XsZS5WnKeo28ylM5x1/Pando-UI-kit-(Web)?node-id=1214%3A50560&t=YLA3FBYLefNvfeuf-0",mdxType:"DocsFigmaLink"})),(0,a.kt)("h2",{id:"anatomy"},"Anatomy"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Fieldset"),(0,a.kt)("li",{parentName:"ol"},"Legend (optional)"),(0,a.kt)("li",{parentName:"ol"},"Input field")),(0,a.kt)("h2",{id:"import"},"Import"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Fieldset, Legend } from '@pluralsight/react'\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function BasicExample() {\n  return (\n    <FormControlProvider readOnly={true}>\n      <Fieldset name="course">\n        <Legend>Choose your favorite course:</Legend>\n        <Radio value="solid">SolidJS</Radio>\n        <Radio value="react">React</Radio>\n        <Radio value="vue">Vue</Radio>\n      </Fieldset>\n    </FormControlProvider>\n  )\n}\n')),(0,a.kt)("h3",{id:"disabled-groups"},"Disabled Groups"),(0,a.kt)("p",null,"To easily disable and entire group, pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"disabled")," prop to the FormControlProvider component."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'function BasicExample() {\n  return (\n    <FormControlProvider disabled={true} readOnly={true}>\n      <Fieldset name="course">\n        <Legend>Choose your favorite course:</Legend>\n        <Radio value="solid">SolidJS</Radio>\n        <Radio value="react">React</Radio>\n        <Radio value="vue">Vue</Radio>\n      </Fieldset>\n    </FormControlProvider>\n  )\n}\n')),(0,a.kt)("h3",{id:"customizing"},"Customizing"),(0,a.kt)("p",null,"There are 3 ways to customize the Fieldset components."),(0,a.kt)("h4",{id:"1-unused-classes"},"1. Unused Classes"),(0,a.kt)("p",null,"Each component layer of the Fieldset has a unused class name that can be utilized in your local CSS to customize the Fieldset at any level."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"pando-fieldset"),": The element of the Fieldset."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"pando-fieldset-legend"),": The element of the Legend.")),(0,a.kt)("h4",{id:"2-passing-a-classname-prop"},"2. Passing a ",(0,a.kt)("inlineCode",{parentName:"h4"},"className")," prop"),(0,a.kt)("p",null,"You can pass a ",(0,a.kt)("inlineCode",{parentName:"p"},"className")," prop to the Fieldset component to customize the Fieldset. This is useful if your project uses ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/css-modules/css-modules"},"CSS Modules")," or a CSS-in-JS library like ",(0,a.kt)("a",{parentName:"p",href:"https://emotion.sh/docs/introduction"},"Emotion"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="Example of using CSS Modules to customize the Fieldset." showLineNumbers',title:'"Example',of:!0,using:!0,CSS:!0,Modules:!0,to:!0,customize:!0,the:!0,'Fieldset."':!0,showLineNumbers:!0},"import customStyles from './customStyles.module.css'\n\nfunction CustomFieldset(props) {\n  return <Fieldset {...props} className={customStyles.custom} />\n}\n\nfunction CustomLegend(props) {\n  return <Legend {...props} className={customStyles.customLegend} />\n}\n")),(0,a.kt)("h4",{id:"3-ejected-fieldset"},"3. Ejected Fieldset"),(0,a.kt)("p",null,'For a low-level "ejected" approach, you can use the Headless-styles API to customize the Fieldset however you prefer while keeping the accessibility behavior.'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript",metastring:"showLineNumbers",showLineNumbers:!0},"import { getFieldsetProps, getLegendProps } from '@pluralsight/headless-styles'\n")),(0,a.kt)("p",null,"To learn more about the Headless-styles API, check out the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/pluralsight/pando/blob/main/packages/headless-styles/src/components/Fieldset/fieldset.ts"},"Headless-styles documentation"),"."),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("h3",{id:"usage-1"},"Usage"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use the fieldset when you need to make a meaningful group of input fields."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Don't")," use the fieldset for every item in a form."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Do")," use the fieldset to group related inputs like Radio, Checkbox, or mixed group fields (i.e. multiple Inputs)."),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"fieldset-fcfieldsetprops"},(0,a.kt)("inlineCode",{parentName:"h3"},"Fieldset: FC<FieldsetProps>")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type FieldsetProps = FieldsetHTMLAttributes<HTMLFieldsetElement>\n")),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Any props that can be passed to a ",(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset"},(0,a.kt)("inlineCode",{parentName:"a"},"fieldset")," element"),".")),(0,a.kt)("h3",{id:"legend-fclegendprops"},(0,a.kt)("inlineCode",{parentName:"h3"},"Legend: FC<LegendProps>")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"type LegendProps = HTMLAttributes<HTMLLegendElement>\n")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Any props that can be passed to a ",(0,a.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend"},(0,a.kt)("inlineCode",{parentName:"a"},"legend")," element"),".")),(0,a.kt)("h2",{id:"accessibility"},"Accessibility"),(0,a.kt)("p",null,"The Pando Fieldset and Legend APIs combined with semantic HTML allow the components to be fully accessible and screen-readable by default."))}m.isMDXComponent=!0}}]);