"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4455],{88660:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(70079),o=a(60047),n=a(26078),i=a(20394),s=a(32042);function l(e){const{href:t}=e,a=(0,n.L)({ariaHidden:!0,size:"s"}),l=t.includes("github")?i.Z:s.Z;return r.createElement(o.TextLink,e,r.createElement(l,a),e.children)}},83296:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=a(3262),o=(a(70079),a(38570)),n=a(88660);const i={tags:["React","Dates","DatePicker"],title:"useAutoFormatDate"},s=void 0,l={unversionedId:"reference/react-hooks/useAutoFormatDate",id:"reference/react-hooks/useAutoFormatDate",title:"useAutoFormatDate",description:"A hook for auto-formatting and validating a text input value to match a short",source:"@site/docs/reference/react-hooks/useAutoFormatDate.mdx",sourceDirName:"reference/react-hooks",slug:"/reference/react-hooks/useAutoFormatDate",permalink:"/docs/reference/react-hooks/useAutoFormatDate",draft:!1,editUrl:"https://github.com/pluralsight/pando/edit/main/website/docs/reference/react-hooks/useAutoFormatDate.mdx",tags:[{label:"React",permalink:"/docs/tags/react"},{label:"Dates",permalink:"/docs/tags/dates"},{label:"DatePicker",permalink:"/docs/tags/date-picker"}],version:"current",lastUpdatedBy:"Kathy Lavoie",frontMatter:{tags:["React","Dates","DatePicker"],title:"useAutoFormatDate"},sidebar:"reference",previous:{title:"Tooltip",permalink:"/docs/reference/components/tooltip"},next:{title:"useIsIndeterminate",permalink:"/docs/reference/react-hooks/useIsIndeterminate"}},u={},p=[{value:"Import",id:"import",level:2},{value:"Reference",id:"reference",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"My Dates are showing up incorrectly",id:"my-dates-are-showing-up-incorrectly",level:3}],c={toc:p},m="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(m,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",{className:"size-xxl"},"A hook for auto-formatting and validating a text input value to match a short date."),(0,o.kt)(n.Z,{icon:"github",href:"https://github.com/pluralsight/tva/blob/main/packages/react-utils/src/hooks/useAutoFormatDate.ts",mdxType:"ViewSourceLink"},"View source"),(0,o.kt)("h2",{id:"import"},"Import"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { useAutoFormatDate } from '@pluralsight/react'\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"interface Options {\n  pattern?: ['m', 'd', 'Y'] | ['d', 'm', 'Y']\n  value?: string\n}\n\nuseAutoFormatDate(options?: Options)\n")),(0,o.kt)("h2",{id:"reference"},"Reference"),(0,o.kt)("p",null,"Call ",(0,o.kt)("inlineCode",{parentName:"p"},"useAutoFormatDate")," at the top level of your component to provide an automatically formatted date value to your text input:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"showLineNumbers {6,15}",showLineNumbers:!0,"{6,15}":!0},'import { FornControlProvider, Input, FieldMessage } from \'@pluralsight/react\'\nimport { useAutoFormatDate } from \'@pluralsight/react\'\nimport { CalendarIcon } from \'@pluralsight/icons\'\n\nfunction DateInput(props) {\n  const inputFormatProps = useAutoFormatDate()\n\n  return (\n    <FormControlProvider>\n      <Input\n        {...inputFormatProps}\n        describedBy="birthdate:help"\n        id="birthdate"\n        name="birthdate"\n        startIcon={CalendarIcon}\n      />\n      <FieldMessage id="birthdate:help">\n        Enter your date of birth in the format MM/DD/YYYY\n      </FieldMessage>\n    </FormControlProvider>\n  )\n}\n')),(0,o.kt)("h3",{id:"parameters"},"Parameters"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"options"),": Object that accepts a ",(0,o.kt)("inlineCode",{parentName:"li"},"pattern")," property that accepts a String Array value of a Date Pattern along with a ",(0,o.kt)("inlineCode",{parentName:"li"},"value")," property that accepts a String to set an ",(0,o.kt)("strong",{parentName:"li"},"initial value"),".")),(0,o.kt)("h3",{id:"returns"},"Returns"),(0,o.kt)("p",null,"An Object containing a ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," property of a ",(0,o.kt)("a",{parentName:"p",href:"https://moment.github.io/luxon/#/formatting?id=presets"},"short date")," String and an ",(0,o.kt)("inlineCode",{parentName:"p"},"onChange")," event handler to attach to your input element."),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h3",{id:"my-dates-are-showing-up-incorrectly"},"My Dates are showing up incorrectly"),(0,o.kt)("p",null,"Make sure you are passing an accepted format option. If you are using Typescript, the types will be available to help prevent this from happening."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Make sure your format option is valid."),(0,o.kt)("li",{parentName:"ol"},"If you are passing in an initial value, make sure it is valid.")))}d.isMDXComponent=!0}}]);